pipeline {
    agent { label 'jenkins-agent'}
    tools {
        jdk 'java17'
        maven 'maven3'
    }
    stages {
        stage('Clean Workspace'){
            steps {
                cleanWs()
            }
        }
        stage('checkout'){
            steps {
                //checkout code from version control
                git branch: 'main' , credentialsId: 'github', url: 'https://github.com/SNS-Srinivasu/registration-application.git'
            }
        }
        stage('Build Application') {
            steps {
                sh "mvn clean package"
            }
        }
        stage('Test Application') {
            steps {
                sh "mvn test"
            }
        }
        stage('SonarQube Analysis') {
            steps {
                script {
                    withSonarQubeEnv(credentialsId: 'jenkins-sonarqube-token'){
                    sh "mvn sonar:sonar"
                    }
                }    
            }
        }
        stage('Quality Gate') {
            steps {
                script {
                    waitforQualityGate abortPipeline: false, credentialsId: 'jenkins-sonarqube-token'
                }
            }
        }
        stage('Deploy') {
            steps {
                echo "deploy is complete"
            }
        }
    }
    post {
        success {
            // Action to take if the pipe line succeeds
            echo 'Pipeline succeeded!'
        }
        failure {
            // Action to take if the pipe line fails
            echo 'Pipeline failed.'
        }
        always {
            // Action to take if the pipe line success or failure
            echo 'Pipeline completed.'
        }

    }
}
